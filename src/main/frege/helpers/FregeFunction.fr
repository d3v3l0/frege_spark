module FregeFunction where

import DataSet
import frege.test.QuickCheck


filterHighRain :: DataSet -> Bool
filterHighRain ds = case (ds.rre150z0) of (Left e) -> false
                                          (Right d) -> d > 5
  
mapGetTemperature :: DataSet -> Double
mapGetTemperature ds = case (ds.tre200s0) of (Left e) -> 0 -- TODO filter out invalid results
                                             (Right d) -> d
                                             
getSum :: [Double] -> Double
getSum [] = 0
getSum (x:xs) = x + getSum xs


mapGetTemperatureFromStringArray :: [String] -> Double
mapGetTemperatureFromStringArray xs = case (String.double(xs!!10)) of (Left e)  -> 0
                                                                      (Right d) -> d


filterHighRainFromStringArray :: [String] -> Bool
filterHighRainFromStringArray xs = case (String.double(xs!!9)) of (Left e)  -> false
                                                                  (Right d) -> d > 5