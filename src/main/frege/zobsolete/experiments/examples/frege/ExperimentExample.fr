module examples.frege.numbers.ExperimentExample where

import spark.bindings.JavaSparkContext
import spark.bindings.SparkConf
import spark.bindings.JavaRDD
import spark.bindings.custom.Function
import spark.bindings.custom.Function2
import frege.java.Util

import frege.test.QuickCheck

emptyList = Collections.empty_list

list :: STMutable a (ArrayList Double)
list = do 	
         doubleList <- ArrayList.new ()
         doubleList.add 1.0
         doubleList.add 2.0
         doubleList.add 1.0
         doubleList.add 3.0
         doubleList.add 4.0
         return doubleList

boolToString :: Bool -> String
boolToString True = "TRUE"
boolToString false = "FALSE"

weights = undefined

main :: IO ()
main = do
  sparkConfig <- SparkConf.new ()
  sparkConfig.setMaster "local"
  sparkConfig.setAppName "Frege-Spark"
  sc :: MutableIO JavaSparkContext <- JavaSparkContext.new sparkConfig
  empty <- emptyList
  emptyRdd <- sc.parallelize empty
  emptyResult <- emptyRdd.isEmpty
  putStrLn $ boolToString emptyResult
  currentList <- list  
  rdd <- sc.parallelize $ currentList
  initialCount <- rdd.count
  putStrLn $ "initialCount: " ++ show (Long.double initialCount)
  distinctRdd <- rdd.distinct
  distinctCount <- distinctRdd.count
  --randomRdds :: ArrayOf RealWorld (JavaRDD Double) <- distinctRdd.randomSplit weights
  putStrLn $ "distinctCount: " ++ show (Long.double distinctCount)
  result <- rdd.isEmpty
  putStrLn $ boolToString result
  --firstRdd :: JavaRDD Double <- randomRdds.getElemAt 0
  --curentFirst <- ().first
  
  --print $ "currentFirst: "
  --println $ currentFirst

  println "final"
