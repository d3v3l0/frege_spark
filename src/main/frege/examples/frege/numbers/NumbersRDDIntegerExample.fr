module examples.frege.numbers.NumbersRDDIntegerExample where

import spark.bindings.SparkConf
import spark.bindings.custom.Function
import spark.bindings.custom.Function2

import spark.bindings.JavaSparkContext

import frege.test.QuickCheck


main :: IO ()
main = computeInFrege

computeInFrege :: IO ()
computeInFrege = do
  sparkConfig <- SparkConf.new ()
  sparkConfig.setMaster "local"
  sparkConfig.setAppName "Frege-Spark"
  sc :: MutableIO JavaSparkContext <- JavaSparkContext.new sparkConfig
    
  currentData <- JavaSparkContext.textFile sc "data/first.csv"
  
  parsedData <- currentData.map  Function.convertToInteger
  filteredData <- parsedData.filter  Function.filterThreeOrFiveOnInteger
  mappedData <- filteredData.map  Function.addOneOnInteger
  sum <- mappedData.reduce Function2.getSumOnInteger

  -- print insights and results
  
  currentFirst <- currentData.first
  
  print $ "currentFirst: "
  println $ currentFirst
  
  parsedFirst <- parsedData.first
  
  print $ "parsedFirst: "
  println $ show $ parsedFirst
  
  
  filteredFirst <- filteredData.first
  
  print $ "filteredFirst: "
  println $ filteredFirst
  
  mappedFirst <- mappedData.first
  
  print $ "mappedFirst: "
  println $ mappedFirst

  print $ "sum: "
  println $ sum

  println "final"
