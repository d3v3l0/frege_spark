module examples.frege.numbers.NumbersRDDExample where

import spark.bindings.SparkConf
import spark.bindings.custom.Function2
import spark.bindings.custom.CustomFunction
import spark.bindings.custom.TestBindings
import spark.bindings.JavaSparkContext

main :: IO ()
main = computeInFrege

computeInFrege :: IO ()
computeInFrege = do
  list <- arrayFromListST ["frege-spark.jar"]
  sparkConfig <- SparkConf.new ()
  --sparkConfig.setMaster "spark://Damians-MacBook.local:7077"
  sparkConfig.setMaster "local"
  sparkConfig.setAppName "Frege-Spark"
  sparkConfig.setJars list

  sc :: MutableIO JavaSparkContext <- JavaSparkContext.new sparkConfig
    
  currentData <- JavaSparkContext.textFile sc "data/first.csv"
  parsedData <- currentData.map  Function.convertToDouble

  filteredData <- parsedData.filter  Function.filterThreeOrFiveOnDouble
  mappedData <- filteredData.map  Function.addOne
  sum <- mappedData.reduce Function2.getSum
  
  currentFirst <- currentData.first
  assertEquals currentFirst "1"

  parsedFirst <- parsedData.first
  assertEquals parsedFirst 1.0
    
  filteredFirst <- filteredData.first
  assertEquals filteredFirst 3.0

  mappedFirst <- mappedData.first
  assertEquals mappedFirst 4.0
  
  assertEquals sum 10.0

  println "final"
