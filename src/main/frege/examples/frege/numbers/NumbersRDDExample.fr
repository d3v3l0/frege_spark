module examples.frege.numbers.NumbersRDDExample where

import frege.java.Util

import spark.bindings.SparkConf
import spark.bindings.custom.Function
import spark.bindings.custom.Function2

import spark.bindings.JavaSparkContext

import frege.test.QuickCheck


main :: IO ()
main = computeInFrege
         

            
computeInFrege :: IO ()
computeInFrege = do
  list <- arrayFromListST ["frege-spark.jar"]
  sparkConfig <- SparkConf.new ()
  sparkConfig.setMaster "spark://Damians-MacBook.local:7077"
  sparkConfig.setAppName "Frege-Spark"
  sparkConfig.setJars list

  sc :: MutableIO JavaSparkContext <- JavaSparkContext.new sparkConfig
    
  currentData <- JavaSparkContext.textFile sc "data/first.csv"
  parsedData <- currentData.map  Function.convertToDouble

  filteredData <- parsedData.filter  Function.filterThreeOrFiveOnDouble
  mappedData <- filteredData.map  Function.addOne
  sum <- mappedData.reduce Function2.getSum

  -- print insights and results
  
  currentFirst <- currentData.first

  print $ "currentFirst: "
  println $ currentFirst

  parsedFirst <- parsedData.first
  
  print $ "parsedFirst: "
  println $ show $ parsedFirst

  
    
  filteredFirst <- filteredData.first
  
  print $ "filteredFirst: "
  println $ filteredFirst

  mappedFirst <- mappedData.first
  
  print $ "mappedFirst: "
  println $ mappedFirst

  print $ "sum: "
  println $ sum

  println "finalRDD"
