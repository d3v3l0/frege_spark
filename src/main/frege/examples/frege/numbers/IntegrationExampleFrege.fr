module examples.frege.numbers.IntegrationExampleFrege where

import spark.bindings.SparkConf
import bindings.Function
import bindings.Function2
import spark.bindings.custom.CustomFunction


import spark.bindings.JavaSparkContext
import spark.config.Config

main :: IO ()
main = do
  sparkConfig <- SparkConf.new ()
  println fregecJar
  list <- arrayFromListST [applicationJar, fregecJar, "frege-interpreter-core-1.3-SNAPSHOT.jar"]
  sparkConfig.setAppName "Frege-Spark"
  sparkConfig.setJars list
  
  --sparkConfig.setMaster "local"
  sparkConfig.setMaster "spark://Damians-MacBook.local:7077"
  

  sc :: MutableIO JavaSparkContext <- JavaSparkContext.new sparkConfig

  currentData <- JavaSparkContext.textFile sc "data/first.csv"
  parsedData <- currentData.map CustomFunction.Function.convertToDouble
  mappedData <- parsedData.map $ Function.Function.createInterpretedFunction "timesTen"
  filteredData <- mappedData.filter $ Function.Function.createInterpretedFunction "filterThirtyOrFifty"
  mappedData1 <- filteredData.map $ Function.Function.createInterpretedFunction "addOne"
  sum <- mappedData1.reduce $ Function2.createInterpretedFunction "sum"

  -- print insights and results

  currentFirst <- currentData.first
  print $ "currentFirst: "
  println $ currentFirst
  
  parsedFirst <- parsedData.first
  print $ "parsedFirst: "
  println $ show $ parsedFirst

  mappedFirst :: Double <- mappedData.first
  print $ "mappedFirst: "
  println $ mappedFirst
  
  filteredFirst :: Double <-  filteredData.first
  print $ "filteredFirst: "
  println $ show $ filteredFirst
  
  mapped1First :: Double <- mappedData1.first
  print $ "mapped1First: "
  println $ mapped1First
  
  print $ "sum: "
  println $ sum

  scMaster :: String <- sc.master
  println $ "calculated with master: " ++ scMaster
  println "final"
