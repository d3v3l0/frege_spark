module JavaBindingsOnDataSetExample where

import JavaSparkContext
import SparkConf
import JavaRDD
import Function
import Function2
import frege.test.QuickCheck
import Config

main :: IO ()
main = basicSpark

add :: Double -> Double -> Double
add a b = a + b

basicSpark :: IO ()
basicSpark = do
  sparkConfig <- SparkConf.new ()
  sparkConfig.setMaster "local"
  sparkConfig.setAppName "Frege-Spark"
  sc <- JavaSparkContext.new sparkConfig
  
  
 
  currentData <- JavaSparkContext.textFile sc  Config.file
  parsedData <- currentData.map  Function.parseLineToJavaDataSet
  filteredData <- parsedData.filter  Function.filterHighRainFromJavaDataSet
  mappedData <- filteredData.map  Function.getTemperatureFromJavaDataSet
  averageTemperature <- mappedData.reduce  Function2.getSum
  

  {-
  currentData <- JavaSparkContext.textFile sc  Config.file
  parsedData <- currentData.map  Function.parseLineToDataSet
  filteredData <- parsedData.filter  Function.filterHighRainFromDataSet
  mappedData <- filteredData.map  Function.getTemperatureFromDataSet
  averageTemperature <- mappedData.reduce  Function2.getSum
  
    -}
  {-
  currentData <- JavaSparkContext.textFile sc Config.file
  parsedData <- currentData.map  Function.parseLineToStringArray
  averageTemperature <- currentData.map  Function.parseLineToStringArray >>= 
   _.filter  Function.filterHighRainFromStringArray >>=
   _.map  Function.getTemperatureFromStringArray
   _.reduce  Function2.getSum
  -}
  
  count <- mappedData.count
  putStrLn $ "Average temperature of measurements with high rain: " ++ (show (averageTemperature / Long.double count))